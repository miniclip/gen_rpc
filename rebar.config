%% == Erlang Compiler ==

{minimum_otp_vsn, "22"}.

{erl_opts, [
    debug_info,
    warn_export_vars,
    warn_unused_import,
    warnings_as_errors,
    {i, "src"}
]}.

%% == Dependencies and plugins ==

{deps, [
    {hut, "1.3.0"},
    {ssl_verify_fun, "1.1.6"}
]}.

{project_plugins, [
    rebar3_hank,
    rebar3_hex,
    rebar3_lint
]}.

%% == Dialyzer ==

{dialyzer, [
    {warnings, [
        error_handling,
        underspecs,
        unknown%,
        %unmatched_returns
    ]}
]}.

%% == Xref ==

{xref_checks, [
    deprecated_function_calls,
    exports_not_used,
    locals_not_used,
    undefined_function_calls
]}.

%% == hank ==

{hank, [
    {ignore, [
        {"**", unused_configuration_options, [ssl_client_port, tcp_client_port]},
        {"**", unused_callbacks, [all]},
        {"test/**", unnecessary_function_arguments}
    ]}
]}.

%% == Profiles ==

{profiles, [
    {dev, [
        {deps, [
            {lager, "3.9.2"},
            {sync, {git, "git://github.com/rustyio/sync.git", {branch, "master"}}}
        ]},
        {erl_opts, [
            debug_info,
            nowarn_export_all,
            nowarn_missing_spec,
            nowarn_missing_spec_all,
            warn_export_vars,
            warn_unused_import,
            warnings_as_errors,
            {d,'HUT_LAGER'},
            {parse_transform, lager_transform}
        ]},
        {shell, [
            {apps, [lager, sync, gen_rpc]}
        ]}
    ]},
    {test, [
        {cover_enabled, true},
        {cover_opts, [verbose]},
        {ct_opts, [
            {dir, "test"},
            {suite, [
                local_SUITE,
                multi_rpc_SUITE,
                multi_rpc_with_key_SUITE,
                remote_SUITE,
                remote_with_key_SUITE
            ]}
        ]},
        {deps, [
            {lager, "3.9.2"}
        ]},
        {dialyzer, [
            {plt_extra_apps, [
                common_test,
                eunit,
                lager,
                ssl_verify_fun
            ]}
        ]},
        {erl_opts, [
            debug_info,
            nowarn_export_all,
            nowarn_missing_spec,
            nowarn_missing_spec_all,
            warn_export_vars,
            warn_unused_import,
            warnings_as_errors,
            {d,'HUT_LAGER'},
            {d,'IGNORE_FAILING_TESTS'},
            {parse_transform, lager_transform}
        ]},
        {extra_src_dirs, [{"test", [{recursive, true}]}]},
        {xref_extra_paths, ["test"]}
    ]}
]}.

%% == EDoc ==

{edoc_opts, [
    {includes, ["src"]},
    {preprocess, true}
]}.
